name: Build OpenWrt

on:
  workflow_dispatch:
    inputs:
      configuration:
        description: 'Configuration'
        required: true
        default: ''
        type: choice
        options:
          - x86_64-24.10-pw
      runner:
        description: 'Runner'
        required: true
        default: 'ubuntu-22.04'
        type: choice
        options:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ${{ github.event.inputs.runner }}

    steps:
      - name: Setup build system
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(cat depends-${{ github.event.inputs.runner }} | xargs)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Maximize disk space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true

      - name: Checkout
        uses: actions/checkout@main

      - name: Prepare environment
        run: |
          echo "BUILD_NAME=${{ github.event.inputs.configuration }}" >> $GITHUB_ENV
          echo "BUILD_ROOT=${{ github.workspace }}/openwrt" >> $GITHUB_ENV
          echo "CONFIG_PATH=${{ github.workspace }}/${{ github.event.inputs.configuration }}" >> $GITHUB_ENV
          grep -v -e '^#' -e '^\s*$' ./${{ github.event.inputs.configuration }}/.env >> $GITHUB_ENV

      - name: Clone source
        run: |
          df -hT $PWD
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          git clone $REPO_URL -b $REPO_BRANCH /workdir/openwrt
          ln -sf /workdir/openwrt $BUILD_ROOT

      - name: Compile package
        id: compile
        run: |
          cd $BUILD_ROOT
          chmod +x $CONFIG_PATH/patch_*.sh || :
          [ -f $CONFIG_PATH/feeds.conf.default ] && mv $CONFIG_PATH/feeds.conf.default ./feeds.conf.default
          [ -f $CONFIG_PATH/patch_before_feed.sh ] && $CONFIG_PATH/patch_before_feed.sh || :
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          [ -d $CONFIG_PATH/files ] && mv $CONFIG_PATH/files ./files
          [ -f $CONFIG_PATH/.config ] && mv $CONFIG_PATH/.config ./.config
          [ -f $CONFIG_PATH/patch_after_feed.sh ] && $CONFIG_PATH/patch_after_feed.sh || :
          echo "$(($(nproc)+1)) thread compile"
          IGNORE_ERRORS=m make -j$(($(nproc)+1)) defconfig download clean world || IGNORE_ERRORS=m make -j1 defconfig download clean world V=s
          cd bin/targets/*/*
          rm -rf packages
          { echo '### SHA256SUMS'; echo '```txt'; cat sha256sums; echo '```'; } > $BUILD_ROOT/SHA256SUMS
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload firmware
        uses: actions/upload-artifact@main
        if: steps.compile.outputs.status == 'success'
        with:
          name: openwrt_$BUILD_NAME_$BUILD_DATE
          path: $FIRMWARE

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 3
